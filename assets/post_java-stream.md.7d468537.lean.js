import{_ as o,b as t,f as e,g as s,h as l,s as a,x as p,e as c}from"./chunks/framework.13bb1723.js";const P=JSON.parse('{"title":"Java函数式编程入门","description":"","frontmatter":{"title":"Java函数式编程入门","date":"2020-09-01T00:00:00.000Z","excerpt":"本文介绍了Java函数式编程的基础知识和入门要点，读者将了解函数式编程的核心概念：Lambda表达式的使用、函数接口和Stream API等关键技术。帮助读者初步掌握Java函数式编程的基本原理和应用，为进一步深入学习提供基础。","tags":["java","lambda","stream","函数式编程"]},"headers":[],"relativePath":"post/java-stream.md","filePath":"post/java-stream.md","lastUpdated":1684750328000}'),r={name:"post/java-stream.md"},D=s("h1",{id:"java-函数式编程入门",tabindex:"-1"},[a("Java 函数式编程入门 "),s("a",{class:"header-anchor",href:"#java-函数式编程入门","aria-label":'Permalink to "Java 函数式编程入门"'},"​")],-1),y=s("blockquote",null,[s("p",null,"本文是自己当时刚工作时做的一次分享，现整理并发表到个人博客中")],-1),F=p("",52),A=p("",21),C=p("",7),i=s("h4",{id:"filter",tabindex:"-1"},[a("filter "),s("a",{class:"header-anchor",href:"#filter","aria-label":'Permalink to "filter"'},"​")],-1),d=s("p",null,[s("strong",null,"解释说明"),a("：用于过滤流中的元素")],-1),u=s("p",null,[s("strong",null,"参数类型"),a("：Predicate函数")],-1),h=s("h4",{id:"sort",tabindex:"-1"},[a("sort "),s("a",{class:"header-anchor",href:"#sort","aria-label":'Permalink to "sort"'},"​")],-1),m=s("p",null,[s("strong",null,"解释说明"),a("：对流中的元素进行排序")],-1),g=s("p",null,[s("strong",null,"参数类型"),a("：Comparator函数")],-1),E=p("",29),f=s("h2",{id:"参考资料",tabindex:"-1"},[a("参考资料 "),s("a",{class:"header-anchor",href:"#参考资料","aria-label":'Permalink to "参考资料"'},"​")],-1),b=s("ul",null,[s("li",null,"《On Java 8》中文版"),s("li",null,"《Effective Java 中文版》（第3版）")],-1);function v(q,S,T,k,j,_){const n=t("q-img");return c(),e("div",null,[D,y,s("p",null,[l(n,{src:"/post/java-stream/lambda.jpg",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})]),F,s("p",null,[l(n,{src:"/post/java-stream/stream.png",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})]),A,s("p",null,[l(n,{src:"/post/java-stream/collection.png",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})]),C,s("p",null,[l(n,{src:"/post/java-stream/map.png",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})]),i,d,u,s("p",null,[l(n,{src:"/post/java-stream/filter.png",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})]),h,m,g,s("p",null,[l(n,{src:"/post/java-stream/sort.png",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})]),E,s("ol",null,[s("li",null,[a("在代码中加上断点 "),l(n,{src:"/post/java-stream/debug.png",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})]),s("li",null,[a("在调试栏找到「Trace Current Stream Chain」 "),l(n,{src:"/post/java-stream/trace.png",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})]),s("li",null,[a("查看流的追踪链 "),l(n,{src:"/post/java-stream/stream_trace.png",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})])]),f,b])}const U=o(r,[["render",v]]);export{P as __pageData,U as default};
