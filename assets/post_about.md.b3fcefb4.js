import{_ as e,v as i,c as r,F as a,T as o,L as l,R as d,M as s}from"./chunks/framework.2325a593.js";const P=JSON.parse('{"title":"关于这个博客","description":"","frontmatter":{"title":"关于这个博客","date":"2020-05-01T00:00:00.000Z","excerpt":"我为什么想自己做一个博客，以及我是怎么搭建起来这个博客网站的","tags":["blog","vitepress","github action","quasar","markdown"]},"headers":[],"relativePath":"post/about.md","filePath":"post/about.md","lastUpdated":1684986007000}'),h={name:"post/about.md"},n=a("h1",{id:"关于这个博客",tabindex:"-1"},[l("关于这个博客 "),a("a",{class:"header-anchor",href:"#关于这个博客","aria-label":'Permalink to "关于这个博客"'},"​")],-1),u=d('<h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>众所周知，哪个程序员不希望有一个自己的博客网站呢，其实我刚毕业就一直想做一个个人博客网站， 但是自己的拖延症太验证了👀，最终在2023年花了点时间，做了一个还能凑合用的博客网站</p><h2 id="定位" tabindex="-1">定位 <a class="header-anchor" href="#定位" aria-label="Permalink to &quot;定位&quot;">​</a></h2><ul><li>朋友圈</li><li>twitter、微博</li><li>抖音、B站、YouTube</li></ul><h2 id="功能亮点" tabindex="-1">功能亮点 <a class="header-anchor" href="#功能亮点" aria-label="Permalink to &quot;功能亮点&quot;">​</a></h2><table><thead><tr><th>特性</th><th>支持程度</th><th>解释</th></tr></thead><tbody><tr><td>响应式</td><td>✅</td><td>在不同尺寸的设备上展示不同的页面布局</td></tr><tr><td>Dark模式</td><td>✅</td><td>支持dark和light两种模式，会自动检测当前系统的主题并适配，无需手动设置</td></tr><tr><td>Markdown</td><td>✅</td><td>支持直接渲染markdown文档为html页面，主题为仿GitHub的markdown样式</td></tr><tr><td>全局搜索</td><td>✅</td><td>基于Algoli，无需自己搭建后台服务器即可实现搜索功能</td></tr><tr><td>SEO优化</td><td>✅</td><td>是的，搜索引擎可以爬取到我的所有博客文章，极大提高了博客网站的访问量</td></tr><tr><td>评论系统</td><td>🚫</td><td>暂不打算支持，我认为<code>GitHub Discusstions</code>可以满足我的要求，因此如果你想留言建议在<a href="https://github.com/YangQuan666/yangquan666.github.io/discussions" target="_blank" rel="noreferrer">这里</a> 直接新建一个议题就可以</td></tr></tbody></table><h2 id="比较" tabindex="-1">比较 <a class="header-anchor" href="#比较" aria-label="Permalink to &quot;比较&quot;">​</a></h2><h3 id="传统的建站步骤" tabindex="-1">传统的建站步骤 <a class="header-anchor" href="#传统的建站步骤" aria-label="Permalink to &quot;传统的建站步骤&quot;">​</a></h3><p>优点：丰富的主题、成熟的方案 缺点：自定义性差、步骤麻烦</p><h3 id="我的" tabindex="-1">我的 <a class="header-anchor" href="#我的" aria-label="Permalink to &quot;我的&quot;">​</a></h3><p>优点：步骤简单、成本低 缺点：开发周期长（一次开发、终身受用）</p><h2 id="用到了哪些技术" tabindex="-1">用到了哪些技术 <a class="header-anchor" href="#用到了哪些技术" aria-label="Permalink to &quot;用到了哪些技术&quot;">​</a></h2><blockquote><p>站在巨人的肩膀，可以看得更远 --沃兹基·硕得</p></blockquote><h3 id="github-pages" tabindex="-1">GitHub Pages <a class="header-anchor" href="#github-pages" aria-label="Permalink to &quot;GitHub Pages&quot;">​</a></h3><p>搭建博客一直有个比不开的问题就是：博客部署到哪？ 自己买服务器，一年的费用也是比不小的开支，好在GitHub帮我们免费提供了一个静态博客的方案：「GitHub Pages」</p><h3 id="vitepress" tabindex="-1">VitePress <a class="header-anchor" href="#vitepress" aria-label="Permalink to &quot;VitePress&quot;">​</a></h3><ol><li>markdown 渲染</li><li>vue3，vite</li><li>支持自定义主题</li></ol><h4 id="文档" tabindex="-1">文档 <a class="header-anchor" href="#文档" aria-label="Permalink to &quot;文档&quot;">​</a></h4><h4 id="安装使用" tabindex="-1">安装使用 <a class="header-anchor" href="#安装使用" aria-label="Permalink to &quot;安装使用&quot;">​</a></h4><h3 id="quasar" tabindex="-1">Quasar <a class="header-anchor" href="#quasar" aria-label="Permalink to &quot;Quasar&quot;">​</a></h3><ol><li>支持vue的前端UI框架</li><li>丰富的组件</li></ol><h3 id="algolia" tabindex="-1">Algolia <a class="header-anchor" href="#algolia" aria-label="Permalink to &quot;Algolia&quot;">​</a></h3><ol><li>搜索索引</li></ol><h3 id="markdown-css" tabindex="-1">Markdown CSS <a class="header-anchor" href="#markdown-css" aria-label="Permalink to &quot;Markdown CSS&quot;">​</a></h3><h3 id="netlify" tabindex="-1">Netlify <a class="header-anchor" href="#netlify" aria-label="Permalink to &quot;Netlify&quot;">​</a></h3><h3 id="sitemap" tabindex="-1">Sitemap <a class="header-anchor" href="#sitemap" aria-label="Permalink to &quot;Sitemap&quot;">​</a></h3><ol><li>google console地址</li><li>npm sitemap</li></ol>',27);function c(b,m,p,q,f,k){const t=s("q-img");return i(),r("div",null,[n,a("p",null,[o(t,{src:"/post/about/blog.webp",alt:"",style:{"max-height":"400px"},loading:"lazy",fit:"contain"})]),u])}const x=e(h,[["render",c]]);export{P as __pageData,x as default};
